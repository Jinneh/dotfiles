
# Remap prefix
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix


# Cursor shape
set -ag terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# truecolor support
set -ag terminal-overrides ",st-256color:Tc"
set  -g default-terminal "tmux-256color"

set  -g assume-paste-time 15
set  -g mouse on
set -sg escape-time 15
set  -g repeat-time 500
set  -g base-index 1
setw -g pane-base-index 1
set  -g allow-rename on
setw -g automatic-rename off
set  -g set-titles on
set  -g set-titles-string "#T - #S"

set  -g activity-action other
setw -g monitor-activity off
setw -g mode-keys vi
setw -g xterm-keys on
set  -g status-keys vi
set  -g history-limit 1000
set  -g history-file $XDG_DATA_HOME/tmux/history

set  -g status on
set  -g status-position bottom



# - Unbind -
unbind t     # clock mode
unbind '"'   # horizental split-window
unbind %     # vertical split-window


bind Enter new-window -c '#{pane_current_path}'
bind R source-file $XDG_CONFIG_HOME/tmux/tmux.conf
bind -r C-Space set status
bind -r Space next-layout
bind C-d command-prompt


# -- Navigation --
bind -r C-r next-window
bind -r C-n previous-window
bind -r C-h swap-window -t :-
bind -r C-g swap-window -t :+

# New panes
bind n split-window -c '#{pane_current_path}' -h -b
bind r split-window -c '#{pane_current_path}' -v
bind t split-window -c '#{pane_current_path}' -v -b
bind d split-window -c '#{pane_current_path}' -h

# Swap panes
bind -r S-Left  swap-pane -s {left-of}
bind -r S-Down  swap-pane -s {down-of}
bind -r S-Up    swap-pane -s {up-of}
bind -r S-Right swap-pane -s {right-of}

# Resize panes
bind -r Left  resize-pane -L 8
bind -r Down  resize-pane -D 5
bind -r Up    resize-pane -U 5
bind -r Right resize-pane -R 8

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-Left  if-shell "$is_vim" "send-keys C-Left"  "select-pane -L"
bind -n C-Down  if-shell "$is_vim" "send-keys C-Down"  "select-pane -D"
bind -n C-Up    if-shell "$is_vim" "send-keys C-Up"    "select-pane -U"
bind -n C-Right if-shell "$is_vim" "send-keys C-Right" "select-pane -R"
bind-key -T copy-mode-vi C-Left  select-pane -L
bind-key -T copy-mode-vi C-Down  select-pane -D
bind-key -T copy-mode-vi C-U     select-pane -U
bind-key -T copy-mode-vi C-Right select-pane -R


# -- Hooks --

# Toggle status on single/multi window
set-hook -g window-linked   'if -F "#{==:#{session_windows},1}" "set status off" "set status on"'
set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set status off" "set status on"'




# -- Status line --

set  -g status off
set  -g status-interval 15

set  -g status-style fg=brightgreen,bg=default

# Left
set  -g status-left-length 50
set  -g status-left-style bold
set  -g status-left  " #{?client_prefix,#[bg=magenta]#[fg=black],#[bg=brightblue]#[fg=black]} #S "

# Right
set  -g status-right-length 20
set  -g status-right-style reverse,bold
set  -g status-right "#{/*//:window_flags}"

# Window
set  -g status-justify centre
setw -g window-status-separator ' '

setw -g window-status-style fg=black,bg=brightgreen
setw -g window-status-format " #[bold]#{window_index} #[default,reverse,bg=brightwhite] #{window_name} "

setw -g window-status-current-style bg=brightwhite,bold
setw -g window-status-current-format " #{window_index} #[reverse] #{window_name} "

setw -g window-status-last-style italics
setw -g window-status-activity-style bg=brightred
setw -g window-status-bell-style bg=yellow

setw -g message-style bg=black
setw -g message-command-style fg=black,bg=white
setw -g mode-style fg=red

# Pane border
set  -g pane-border-style fg=black
set  -g pane-active-border-style fg=white
